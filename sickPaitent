
//home page
import React, { Component } from 'react';
import {
  Image,
  StyleSheet,
  Text,
  TouchableHighlight,
  View,
  TextInput,
  SafeAreaView,
  Keyboard,
  KeyboardAvoidingView,
  TouchableWithoutFeedback,
  keyboardVerticalOffset,
  Platform //tells us if we are running on iOS or Android
} from 'react-native';

import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import { ScrollView } from 'react-native-gesture-handler';
import { CheckBox } from 'react-native-elements'


//instantiate stackNavigator
const Stack = createStackNavigator();

//separate app screens
function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator initialRouteName="Home">
        {/*Home page*/}
        <Stack.Screen
          name="Home"
          component={HomePage}
          options={{
            headerStyle: {
              ...Platform.select({ //Makes color scheme grey on iOS, blue on android
                ios: { backgroundColor: '#858585'}, 
                android: { backgroundColor: '#2d87d6'},
              }),
            },
            headerTitleStyle: {
              color: 'white'
            }
          }}
        />
        {/*Survey Page*/}
        <Stack.Screen
          name="Survey"
          component={Survey}
          options={{
            headerStyle: {
              ...Platform.select({ //Makes color scheme grey on iOS, blue on android
                ios: { backgroundColor: '#858585'},
                android: { backgroundColor: '#2d87d6'},
              }),
            },
            headerTitleStyle: {
              color: 'white'
            }
          }}
        />
        {/*summary page*/}
        <Stack.Screen
          name="Summary"
          component={Summary}
          options={{
            headerStyle: {
              ...Platform.select({ //Makes color scheme grey on iOS, blue on android
                ios: { backgroundColor: '#858585'},
                android: { backgroundColor: '#2d87d6'},
              }),
            },
            headerTitleStyle: {
              color: 'white'
            }
          }}
        />
      </Stack.Navigator>
    </NavigationContainer>
  );
}

//Home page layout and functions
class HomePage extends Component {
  //set class state
  state = { text: '' };

  constructor(props) {
    super(props);
    this.state = {
      phone: ''
    };
  }

  //create event handlers

  //clear text in input and navigate to Survey page
  _clearNav() {
    this.setState({
      phone: '',
    })
    this.props.navigation.navigate('Survey')
  }

  //handle change to diable button until 10 digits have been entered
  handleChange = n => {
    this.setState({
      phone: n.target.value
    });
  }

  render() {
    const { phone } = this.state;
    //create constructor to disable button until 10 digits have been entered
    const isEnabled = phone.length == 10;
    return (
      <KeyboardAvoidingView
        behavior="height"
        style={{ flex: 1 }}
      >
        <SafeAreaView style={styles.container}>
          <TouchableWithoutFeedback onPress={Keyboard.dismiss}>

            <View style={styles.inner}>

              {/*header image*/}
              <Image
                style={styles.image}
                source={{ uri: 'https://www.freepnglogos.com/uploads/medicine-logo-png-1.png' }}
              />

              {/*header*/}
              <Text style={styles.header}>
                Hello There!
              </Text>

              <Text style={{ fontSize: 25 }}>
                Welcome
              </Text>
              <Text style={{ marginBottom: 30, marginTop: 15 }}>
                Sign in with your phone number to proceed.
              </Text>

              {/*create home input*/}
              <View style={styles.textContainer}>
                <TextInput
                  style={styles.input}
                  placeholder="Enter Your Phone Number"
                  maxLength={10}
                  //set state for input in order to disable button until 10 digits are entered and also clear upon button press
                  onChangeText={(phone) => this.setState({ phone })}
                  onChange={this.handleChange}
                  value={this.state.phone}
                />
              </View>

              {/*Create Sign In button to reach survey page*/}

              <View style={styles.buttonContainer}>
                <TouchableHighlight
                  onPress={this._clearNav.bind(this)}
                  underlayColor="white"
                  disabled={!isEnabled}
                >
                  <View style={styles.button}>
                    <Text style={styles.buttonText}>Sign In</Text>
                  </View>
                </TouchableHighlight>
              </View>
            </View>
          </TouchableWithoutFeedback>
        </SafeAreaView>
      </KeyboardAvoidingView>

    );
  }
}

//Survey Page

//set survey variables
var withDr = 0;
var withoutDr = 0;
class Survey extends Component {
  //set class state
  state = { text: '' };

  constructor(props) {
    super(props);
    this.state = {
      input: '',
      withDr: 0,
      withoutDr: 0
    };
  }
  //increment amount of patients with physician
  IncrementWith = () => {
    withDr++
    this.setState({ yeschecked: !this.state.yeschecked });
  }
  //increment amount without physician
  IncrementWithout = () => {
    withoutDr++
    this.setState({ nochecked: !this.state.nochecked });
  }

  //clear input and navigate to summary page
  _clearText() {
    this.setState({
      input: '',
      input2: '',
      input3: '',
      input4: '',
      input5: '',
      input6: '',
      input7: '',
      input8: '',
      input9: ''
    })
    this.props.navigation.navigate('Summary')
    count++
  }

  render() {
    return (
      <KeyboardAvoidingView
        behavior="padding"
        style={{ flex: 1 }}
        keyboardVerticalOffset={90}
      >
        <SafeAreaView style={styles.container}>
          <TouchableWithoutFeedback onPress={Keyboard.dismiss}>
            <View style={{ flex: 1, justifyContent: 'flex-start' }}>
              <ScrollView>
                <View>
                  {/*Question 1, checkbox to increment with or without dr*/}
                  <Text style={styles.questionText}>1. Do you have a primary care physician?</Text>
                  <CheckBox
                    title='Yes'
                    checked={this.state.yeschecked}
                    checkedIcon='dot-circle-o'
                    uncheckedIcon='circle-o'
                    onPress={this.IncrementWith}
                  />
                  <CheckBox
                    title='No'
                    checked={this.state.nochecked}
                    checkedIcon='dot-circle-o'
                    uncheckedIcon='circle-o'
                    onPress={this.IncrementWithout}
                  />

                  <Text style={styles.questionText}>2. how would you rate the local hospitals in your area?</Text>
                  <TextInput
                    style={styles.surveyInput}
                    placeholder="Enter Your Response"
                    maxLength={500}
                    onChangeText={(input) => this.setState({ input })}
                    value={this.state.input}
                  />

                  <Text style={styles.questionText}>3. How often does a close friend or relative visit you in your home? </Text>
                  <TextInput
                    style={styles.surveyInput}
                    placeholder="Enter Your Response"
                    maxLength={500}
                    onChangeText={(input2) => this.setState({ input2 })}
                    value={this.state.input2}
                  />

                  <Text style={styles.questionText}>4. Can you get to places out of walking distances without help?</Text>
                  <TextInput
                    style={styles.surveyInput}
                    placeholder="Enter Your Response"
                    maxLength={500}
                    onChangeText={(input3) => this.setState({ input3 })}
                    value={this.state.input3}
                  />

                  <Text style={styles.questionText}>5. Can you do your own housework without help?</Text>
                  <TextInput
                    style={styles.surveyInput}
                    placeholder="Enter Your Response"
                    maxLength={500}
                    onChangeText={(input4) => this.setState({ input4 })}
                    value={this.state.input4}
                  />

                  <Text style={styles.questionText}>6. Can you go shopping for groceries without help?</Text>
                  <TextInput
                    style={styles.surveyInput}
                    placeholder="Enter Your Response"
                    maxLength={500}
                    onChangeText={(input5) => this.setState({ input5 })}
                    value={this.state.input5}
                  />

                  <Text style={styles.questionText}>7. Can you prepare your own meals?</Text>
                  <TextInput
                    style={styles.surveyInput}
                    placeholder="Enter Your Response"
                    maxLength={500}
                    onChangeText={(input6) => this.setState({ input6 })}
                    value={this.state.input6}
                  />

                  <Text style={styles.questionText}>8. Can you do your own laundry?</Text>
                  <TextInput
                    style={styles.surveyInput}
                    placeholder="Enter Your Response"
                    maxLength={500}
                    onChangeText={(input7) => this.setState({ input7 })}
                    value={this.state.input7}
                  />

                  <Text style={styles.questionText}>9. Can you manage your own money?</Text>
                  <TextInput
                    style={styles.surveyInput}
                    placeholder="Enter Your Response"
                    maxLength={500}
                    onChangeText={(input8) => this.setState({ input8 })}
                    value={this.state.input8}
                  />

                  <Text style={styles.questionText}>10. Can you dress and undress yourself?</Text>
                  <TextInput
                    style={styles.surveyInput}
                    placeholder="Enter Your Response"
                    maxLength={500}
                    onChangeText={(input9) => this.setState({ input9 })}
                    value={this.state.input9}
                  />

                  <View style={{ alignItems: 'center' }}>

                    <TouchableHighlight
                      onPress={this._clearText.bind(this)}
                      underlayColor="white">
                      <View style={styles.button}>
                        <Text style={styles.buttonText}>View Summary</Text>
                      </View>
                    </TouchableHighlight>
                  </View>
                </View>
              </ScrollView>
            </View>
          </TouchableWithoutFeedback>
        </SafeAreaView>
      </KeyboardAvoidingView>
    );
  }
}

//create variables for summary

var count = 0;

class Summary extends Component {
  constructor(props) {
    super(props);
    this.state = {
      count: 0
    };
  }

  //event handler to allow navigation back to home page
  goHome() {
    this.props.navigation.navigate('Home')
  }

  render() {
    return (
      <View>
        <Text style={styles.summaryText}>Patients Seen: {count}</Text>
        <Text style={styles.summaryText}>Patients with a Physician: {withDr}</Text>
        <Text style={styles.summaryText}>Patients without a Physician: {withoutDr}</Text>

        <View style={styles.summaryButton}>
          <TouchableHighlight
            onPress={this.goHome.bind(this)}
            underlayColor="white">
            <View style={styles.button}>
              <Text style={styles.buttonText}>Home</Text>
            </View>
          </TouchableHighlight>
        </View>
      </View>
    );
  }
}

export default App;


//Styles
const styles = StyleSheet.create({
  container: {
    flex: 1,
  },

  image: {
    resizeMode: 'contain',
    height: Platform.OS === 'android' ? 80 : 82, //height 80 for android, 60 for iOS
    alignItems: 'flex-start',
    marginRight: Platform.OS === 'android' ? 280 : 260, //marginRight 280 for android, 250 for iOS
    marginTop: Platform.OS === 'android' ? 120 : 110, //marginTop 120 for android, 110 for iOS
  },

  header: {
    fontSize: Platform.OS === 'android' ? 30 : 32, //fontSize 30 for android, 32 for iOS
    marginBottom: Platform.OS === 'android' ? 20 : 18, //marginBottom 20 for android, 18 for iOS
    fontWeight: 'bold',
    marginTop: Platform.OS === 'android' ? 10 : 12, //marginTop 10 for android, 12 for iOS
  },
  textContainer: {
    marginBottom: Platform.OS === 'android' ? 80 : 85, //marginBottom 80 for android, 85 for iOS
  },

  inner: {
    padding: 24,
    flex: 1,
    justifyContent: "flex-end",
    paddingBottom: 140,
  },

  buttonContainer: {
    flex: 1,
    flexDirection: 'row',
    justifyContent: 'center',
    paddingTop: Platform.OS === 'android' ? 60 : 80, //paddingTop 60 for android, 80 for iOS
    marginBottom: Platform.OS === 'android' ? 120 : 150, //marginBottom 120 android, marginBottom 150 iOS
    alignItems: 'center',
    position: 'absolute',
    bottom: 0,
    right: 0,
    left: 0
  },

  button: {
    marginBottom: Platform.OS === 'android' ? 36 : 10, //marginBottom 36 for android, 10 for iOS
    justifyContent: 'flex-end',
    margin: 10,
    width: 300,
    alignItems: 'center',
    ...Platform.select({ //Makes color scheme grey on iOS, blue on android
      ios: { backgroundColor: '#858585'}, 
      android: { backgroundColor: '#2d87d6'},
    }),
    borderRadius: 5,
  },

  summaryButton: {
    alignItems: 'center',
    top: 370,
    bottom: 0,
    left: 0,
    marginBottom: 200
  },
  buttonText: {
    textAlign: 'center',
    padding: 20,
    color: 'white',
    fontSize: 20,
  },

  input: {
    height: 50,
    borderColor: "#d6d6d6",
    borderWidth: 1,
    marginBottom: Platform.OS === 'android' ? 30 : 28, //marginBottom 30 for android, 28 for iOS
    borderRadius: 5,
  },

  surveyInput: {
    padding: 8,
    borderColor: "#d6d6d6",
    borderWidth: 1,
    justifyContent: 'flex-start',
    borderRadius: 5,
    marginBottom: Platform.OS === 'android' ? 30 : 28, //marginBottom 30 for android, 28 for iOS
    marginLeft: 20,
    marginRight: 20
  },
  questionText: {
    fontSize: 20,
    marginLeft: 20
  },
  summaryText: {
    fontSize: 20,
    marginLeft: 20,
    marginBottom: Platform.OS === 'android' ? 20 : 18 //marginBottom 20 for android, 18 for iOS
  }
});
